@startuml

!include ../../../commons.style


class Main

package smarthome {

  class SmartLight <<Receiver>> {
    - Boolean isOn = false
    __
    + <<action>> switch(status: Boolean)
  }

}

package commands {

  interface Command {
    + execute()
    + revert(): Command
  } 

  class Invoker {
    + invoke(c: Command)
    + cancel()
    + reset()
  }

  Invoker  *-> "n\nhistory" Command

  package light {
    abstract class SmartLightCommand
    Command <|.. SmartLightCommand
    SmartLight <- SmartLightCommand

    class SwitchLightOn <<Command>>
    class SwitchLightOff <<Command>>
    SmartLightCommand <|-- SwitchLightOn
    SmartLightCommand <|-- SwitchLightOff

  }

}


class Main <<Client>>

Main --> SmartLight
Main -> Invoker
Command . Main


@enduml
